<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:rabbit="http://www.springframework.org/schema/rabbit" 
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
    http://www.springframework.org/schema/rabbit
    http://www.springframework.org/schema/rabbit/spring-rabbit-1.7.xsd" >

    <description>rabbitmq 连接服务配置</description>
    <rabbit:annotation-driven/>
    <!-- 连接配置 -->
	<rabbit:connection-factory id="connectionFactory"
		host="${mq.host}" username="${mq.username}" password="${mq.password}"
		port="${mq.port}" virtual-host="${mq.vhost}" publisher-confirms="true" />
    <!--通过指定下面的admin信息，当前producer中的exchange和queue会在rabbitmq服务器上自动生成 -->
    <rabbit:admin id="connectAdmin" connection-factory="connectionFactory" auto-startup="true"/>
    
    <!-- 消息对象json转换类 -->
    <bean id="jsonMessageConverter" class="org.springframework.amqp.support.converter.Jackson2JsonMessageConverter" />  
    
    
    <!-- 配置线程池 -->  
	<bean id="taskExecutor"
		class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<!-- 线程池维护线程的最少数量 -->
		<property name="corePoolSize" value="5" />
		<!-- 线程池维护线程所允许的空闲时间 -->
		<property name="keepAliveSeconds" value="30000" />
		<!-- 线程池维护线程的最大数量 -->
		<property name="maxPoolSize" value="100" />
		<!-- 线程池所使用的缓冲队列 -->
		<property name="queueCapacity" value="200" />
	</bean>
    
    <!--定义queue -->
    <!-- durable:是否持久化
        exclusive: 仅创建者可以使用的私有队列，断开后自动删除
        auto_delete: 当所有消费客户端连接断开后，是否自动删除队列     -->
    <rabbit:queue id="testQueue" name="oauth.testQueue1" durable="true" auto-delete="false" exclusive="false" declared-by="connectAdmin"/>
    <rabbit:queue id="testQueue2" name="oauth.testQueue2" durable="true" auto-delete="false" exclusive="false" declared-by="connectAdmin"/>
    <rabbit:queue id="testQueue3" name="oauth.testQueue3" durable="true" auto-delete="false" exclusive="false" declared-by="connectAdmin"/>
    <rabbit:queue id="responseQueue4" name="oauth.responseQueue4" durable="true" auto-delete="false" exclusive="false" declared-by="connectAdmin"/>
     <!-- 定义direct exchange，绑定queueTest -->
    <rabbit:direct-exchange name="amqpExchange" durable="true" auto-delete="false">
        <rabbit:bindings>
            <rabbit:binding queue="oauth.testQueue1" key="oauth.testQueue1.key"></rabbit:binding>
            <rabbit:binding queue="oauth.testQueue2" key="oauth.testQueue2.key"></rabbit:binding>
            <rabbit:binding queue="oauth.testQueue3" key="oauth.testQueue3.key"></rabbit:binding>
            <rabbit:binding queue="oauth.responseQueue4" key="oauth.responseQueue4.key"></rabbit:binding>
        </rabbit:bindings>
    </rabbit:direct-exchange>

    <!-- spring template声明-->
	<rabbit:template id="amqpTemplate" exchange="amqpExchange"
		connection-factory="connectionFactory" message-converter="jsonMessageConverter"
		channel-transacted="false" />
    
    <!-- 消息接收者 -->
    <!-- <bean id="messageConsumer2" class="com.guoyicap.oauth.rabbitmq.MessageConsumer2"></bean> -->
    
    <!-- queue litener  观察 监听模式 当有消息到达时会通知监听在对应的队列上的监听对象-->
    <rabbit:listener-container
	   connection-factory="connectionFactory" group="test" channel-transacted="false" 
	   prefetch="100" receive-timeout="600000" 
	   concurrency="5" max-concurrency="100" task-executor="taskExecutor" 
	   message-converter="jsonMessageConverter" acknowledge="auto">
	   
	   <!-- <rabbit:listener queues="oauth.testQueue1" ref="messageConsumer" method="onMessage" /> -->
	   <!-- <rabbit:listener queues="oauth.testQueue2" ref="messageConsumer2" method="receive" response-exchange="amqpExchange" response-routing-key="oauth.responseQueue4.key"/> -->
    </rabbit:listener-container>
    
    
</beans>